
6.20 
- 방화벽 사용안함으로 설정해야 통신이 될것
- 무조건 에셋 -> 처음 세팅할때 무조건!
-> 필요한 에셋들 임포트할때 에러뜨는 부분은 -> Association에 있는 에셋들도 같이 임포트해줘야 에러가 안난다
- imfine 클라우드 다운받기(최신이면 최신거로)
- 경로를 무조건 빌드폴더 안에 있는 데이터폴더에 넣도록 하자
- 단축키 약속되어 있따(이중키로 무조건 설정하자. 잘못누를수있기땜에..) -> 단축키는 외워놓기
- 처음 프로젝트 세팅할때 managers 넣고 debug넣고~ 항상! 그렇게 세팅하도록 한다
- settings 라고 적혀져잇는 것들은 대부분 거의 다 ui 임! -> 빗금으로된 프리팹은 빗금으로된 프리팹끼리 넣기
- 처음에 에셋 넣을때 -> 노션에 정리되어있는 퀵 스타트를 잘 보자
- 무조건에셋은 외워두기 어떻게 되어가는지랑 그런거 .. 
- 그리고 굵직한 매니저같은 역할을 하는 것들은 모노싱글톤으로 하자~ ㅇㅖ를 들어 프로토콜 / 비디오매니저 / 메인 매니저 같은 것들
- mediaplayer추가하기. 영상이 세개라고 해서 mediaplayer를 세개 할필욘없다. 보통 한개로하고, 이번에도 한개로 추가하기
- 데이터폴더에다가 동영상 넣기(관리하기)
- 비디오는 참고용으로 보기(videoManagerUI) -> 내가 직접 에셋코드 활용해서 만들어보기
- 플랫폼별로 프로젝트 새로 파기 (비디오면 비디오 프로젝트, 모바일이면 모바일 프로젝트)
- 이번에는 ip/포트 개념 잘 알아두기
- 와이파이 잡아서 pc와 같은 게이트웨이여야해 (회사안 와이파이)
- 타임싱크란. . tcp에서 서버를 거쳐서 여러 디스플레이에 띄울텐데 보내면 응답을 하고 그제서야 확신들고~ 띄울텐데 그래서 타임싱크가 안맞을수있음

---
-네트워크통신을 하게 해주는걸 소켓이라고 한다 
- tcp/udp -> tcp는 연결의 신뢰성을 준다 서로 확인절차를 가짐. 확인절차를 가지기때문에 느릴수있단느 점
- udp는 동영상 스트리밍에 적합하다 손실의 위험성은 있낀하지만 빠르다

소켓생성 - bind - listen - accept - 퉁신 - 통신종료

라우터 = 공유기

라우터에 연결된 것들이 많다 - 컴퓨터, 다른컴퓨터, 핸드폰 등등
내부ip가 있다. 

모바일 - 클라이언트
PC / 디스플레이 - 서버

192.168.1.12

---------------
1. 서버 프로젝트 : 동영상을 재생할 클라이언트로부터 명령을 받고, 해당 명령을 처리하여 동영상을 재생한다. 
서버 프로젝트는 유니티에서 구현되며, TCP소켓 통신을 통해 클라이언트와 통신한다.
2. 클라이언트 프로젝트(모바일) : 모바일 앱으로 구현되며, 버튼을 누르면 서버에 동영상 재생 명령을 전송한다.
이 프로젝트는 유니티로 빌드하여 모바일 플랫폼에 배포된다.
3. 비디오 재생 프로젝트(PC또는 다른 디스플레이) : 동영상을 실제로 재생할 환경으로, 유니티 또는 다른 미디어 재생 프로그램을 사용하여 구현한다.
이 프로젝트는 유니티 또는 다른 개발 도구로 빌드하여 해당 환경에 배포한다.

구체적인 절차
서버 프로젝트 구현:

Unity에서 서버 코드를 작성하여 TCP 소켓을 통해 클라이언트와 통신합니다.
클라이언트로부터 동영상 재생 명령을 받으면, 해당 명령을 처리하여 비디오 재생 프로젝트로 전달합니다.
클라이언트 프로젝트 (모바일) 구현:

Unity에서 모바일 앱을 개발하고, 서버에 연결하여 명령을 보낼 수 있도록 TCP 소켓 통신 코드를 작성합니다.
버튼 클릭 이벤트를 통해 서버에 동영상 재생 명령을 전송합니다.
비디오 재생 프로젝트 구현:

Unity 또는 다른 미디어 재생 프로그램을 사용하여, 서버로부터 받은 동영상 재생 명령을 처리합니다.
예를 들어, AVPro Video와 같은 미디어 플레이어를 사용하여 동영상을 재생합니다.
시나리오
모바일 앱: 모바일에서 버튼을 누르면 서버로 동영상 재생 명령을 전송합니다.
서버: 모바일 클라이언트로부터 명령을 받고, 클라이언트 목록을 유지하며, 동영상 재생 명령을 비디오 재생 프로젝트로 전달합니다.
비디오 재생 프로젝트: 서버로부터 받은 명령을 처리하여 동영상을 재생합니다.
중요 사항
각 프로젝트는 독립적으로 빌드되어야 합니다.
네트워크 통신을 위한 IP 주소와 포트 번호를 적절히 설정하여 서로 연결합니다.
모바일 앱에서는 네트워크 연결 상태를 고려하여 오류 처리를 추가합니다.



